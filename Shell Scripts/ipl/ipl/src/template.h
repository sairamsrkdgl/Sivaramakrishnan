char *Template[350] =  { "Proc Areadef:",
"Area.bottom: 0 to 12    :   : Units are inches from lower left.",
"Area.file: token    :   : file containing user defined areas",
"Area.left: 0 to 12    :   :",
"Area.rectangle: 2coordpair   :  : alternately, two coord-pairs (low left, up right) rectangle",
"Area.right: 0 to 12    :   : | These four must all be used together.",
"Area.top: 0 to 12    :   : ",
"Area:  token    : standard : preset graphics area name (see area.coords)",
"Clone:  token    :  : to inherit parms from a previous Areadef.",
"Font:  font    :         : standard font to be used on axis labels etc.",
"Frame:  {single,double,none}  : none  : frame of graphic area ",
"Saveas:  token    :  : to give this Areadef a name so it can be Cloned later.",
"Shade:  color    :   : shade of graphic area",
"Subtitle.above: -12 to 12 (T)   : 0.02  : distance of 1st area title line above window top, inches",
"Subtitle.font: font    :   : font for area title",
"Subtitle.justify: {center,left,right}  : left  : title to be centered, left, or right justified",
"Subtitle.size: charsize   : 10  : char size of title",
"Subtitle: text    :   : area title",
"Xaxis:  {bottom,top,both,none}  : bottom : where to draw X axis",
"Xinc:  number    : 1  : increment.. put a tic mark every n units",
"Xlabel.position: -12 to 12 (X)   : 0.6  : distance of x axis identifier from window bottom, inches",
"Xlabel.size:  charsize   : 10  : char size for x axis identifier",
"Xlabel:  text    :   : x axis identifier",
"Xmax:  number     :   : maximum in x",
"Xmin:  number     : 0   : minimum in x",
"Xscaletype: {linear,log,yymm}   : linear : x scaling discipline",
"Xstart.0or1: 0 to 10    : 0  : tell x stubs where to start ",
"Xstub.fileline: number    : 0  : line in a stub text file to start at",
"Xstub.grid: {line,shade,none,wline}  : none  : form a grid of lines or shaded blocks",
"Xstub.minor: 0 to 100   : 0  : create this many divisions between regular tics",
"Xstub.nolonetics: {y,n} : y : if y, no tics will be produced where there are no stubs",
"Xstub.shade: color    : 0.98  : shade for the shaded blocks",
"Xstub.size:  charsize   : 7  : char size for stubs",
"Xstub.startmonth: 1 to 12   :   : for month stubs, leftmost month",
"Xstub.startyear: 0 to 99   :   : for month stubs, leftmost year ",
"Xstub.stubs: {bottom,top,both,none}  : bottom : produce labeled axis on left, right, or both sides",
"Xstub.ticlen.minor: -2 to 2 (X)   : 0.035  : length of minor tics in inches (negative inverts it)",
"Xstub.ticlen: -2 to 2 (X)   : 0.08  : length of major tics in inches (negative inverts it)",
"Xstub.tics: {bottom,top,both,none}  : bottom : which side(s) to put tics on",
"Xstub.yofs: -2 to 2 (X)   : 0.2  : distance of stubs up(-) or down(+) from x axis in inches",
"Xstub:   text    : num  : stubs for tics (num, a file name, a var, or literal)",
"Xticfmt: token    : %4.0f  : format for display of numbers in X (like printf)",
"Yaxis:  {left,right,both,none}  : left  : where to draw Y axis",
"Yinc:  number    : 1  : increment.. put a tic mark every n units",
"Ylabel.position: -12 to 12 (Y)   : 0.6  : distance of y axis identifier from window left, inches",
"Ylabel.size:  charsize   : 10   : char size for y axis identifier",
"Ylabel:  text    :   : y axis identifier",
"Ymax:  number    :   : maximum in y",
"Ymin:  number    : 0  : minimum in y",
"Yscaletype: {linear,log}   : linear : y scaling discipline",
"Ystart.0or1: 0 to 10    : 0  : tell y stubs to start at 0 ",
"Ystub.fileline: number    : 0  : line in a stub text file to start at",
"Ystub.grid: {line,shade,none,wline}  : none  : form a grid of lines or shaded blocks",
"Ystub.minor: 0 to 100   : 0  : create this many divisions between regular tics",
"Ystub.nolonetics: {y,n} : y : if y, no tics will be produced where there are no stubs",
"Ystub.shade: color     : 0.98  : shade for the shaded blocks",
"Ystub.size:  charsize   : 7  : char size for stubs",
"Ystub.stubs:  {left,right,both,none}  : left  : produce labeled axis on left, right, or both sides",
"Ystub.ticlen.minor: -2 to 2 (Y)   : 0.035  : length of minor tics in inches (negative inverts it)",
"Ystub.ticlen: -2 to 2 (Y)   : 0.08  : length of major tics in inches (negative inverts it)",
"Ystub.tics: {left,right,both,none}  : left  : which side(s) to put tics on",
"Ystub.xofs: -2 to 2 (Y)   : 0.1  : distance from y axis to right side of y stub",
"Ystub:   text    : num   : stubs for tics (num, a file name, a var, or literal)",
"Yticfmt: token    : %4.0f  : format for display of numbers in Y (like printf)",
"Proc Arrow:",
"Clone:  token    : :",
"Points:  2coordpair   : : x1, y1, x2, y2.  Arrowhead will be at (x2, y2)",
"Saveas:  token    : : ",
"Proc Bargraph:",
"Clone:  token  :  : to clone an earlier proc's set of parameters",
"Field: dfield (list8) (M) :   : a field for each bar or subbar",
"Format: {single,cluster,stack} : single : single bars, clusters of bars, or bars stacked up",
"Idfield.position: -1 to 1 : 0.02  : distance of label above (or below) top of bar (inches)",
"Idfield.size:  charsize : 6  : char size of labels",
"Idfield: dfield (list8) :   : bars can be labeled using these field(s)",
"Killwild: number  :   : if a data value greater than this is found, abort ",
"Outlinebars: {y,n}  : y  : outline for each bar",
"Saveas:  token  :  : to save a set of parms for cloning",
"Segment: {y,n}  : n  : segment bars at axis tics",
"Separation.sub: -2 to 2  : 0.03  : separation factor between sub-bars in a cluster",
"Separation: -2 to 2  : 0.20  : separation factor between major bar spaces ",
"Shade:   color (list8) : .2 .5 .8 1 0  : a shade for each bar or subbar",
"Xfield:  dfield  :  : X position of bars can be determined by this data field *",
"Xstart.0or1: {0,1}  : 1  : start bars at X=0 or X=1",
"Zeroat:  number  :   : bars point down at values less than this (usually 0)",
"Proc Boxplot:",
"Clone:  token    :  : to clone an earlier proc's set of parameters",
"Datarow: number     : 1  : the row in the data that contains the above 6 values",
"Ends:  {y,n}    : y  : do little cross-bars on the ends?",
"Fields:  dfield (list6) (M)  :   : the 6 data fields (see below)",
"Label.size: charsize   : 7  : size of N label in points",
"Linethick: 0 to 5    : 1  : thickness of boxplot line",
"Printn:  {y,n}    : y  : print an N=... string at the bottom?",
"Saveas:  token    :  : to save a set of parms for cloning",
"Width:  number    : 0.5  : width of box, in data units",
"Xloc:  number    : 0.5  : where box will be centered in x, in data units",
"Proc Distribution:",
"Axdist.length:  -2 to 2    : 0.08  : length of distribution bars ",
"Axdist:  {y,n}    : n  : show bar distributions on axes",
"Clone:  token    :  : to clone an earlier proc's set of parameters",
"Cluster: {y,n}    : y  : offset overlaying points slightly to show duplicity",
"Idfield: dfield    :  : case identifier may be in this field",
"Mark.field: dfield     :   : if specified, mark is contents of this field",
"Mark.font: font      :   : font for points",
"Mark.size: charsize   : 6  : size (in point units) for data points",
"Mark:  token    : sym6e  : symbol code (symNS) or character(s) for points",
"Saveas:  token    :  : to save a set of parms for cloning",
"Shadefield: dfield     :  : if specified, shade of point symbols controlled by field",
"Shadescale: number    :  : factor for scaling data to acceptable shade range (0..1)",
"Sizefield: dfield     :  : if specified, size of symbols controlled by field ",
"Sizescale: number    : 1  : factor for scaling data to acceptable size (4..20)",
"Xfield:  dfield (M)   :   : x data comes from this field ",
"Yfield:  dfield    :   : y data field.  If Yfield ommitted, do a bar distr.",
"Proc Draw:",
"Clone:  token    :  : to clone an earlier proc's set of parameters",
"Linethick: 0.1 to 10   : 1  : thickness of line",
"Linetype.magnify: 0.1 to 10   : 1  : magnification of patterns",
"Linetype: 0 to 8    : 0  : line dash pattern",
"Points:  text (M) (C)   :  : coord pairs, 2 per line (move+draw) or 1 per line (draw)",
"Saveas:  token    :  : to save a set of parms for cloning",
"System:  {data,absolute}   : absolute : which coord system points are in",
"Proc Errorbars:",
"Clone:  token    :  : to clone an earlier proc's set of parameters",
"Double:  {y,n}    : y  : display 2 times the error amount?",
"Errfield: dfield (M)   :  : field containing error amount in y",
"Linethick: 0 to 10    : 0.3  : line thickness for error bars",
"Offset:  -1 to 1    : 0  : amount of offset in X, in inches",
"Saveas:  token    :  : to save a set of parms for cloning",
"Taillen: 0 to 1    : 0.04  : width of tails at the end of the bars",
"Xfield:  dfield (M)   :  : field containing point x location",
"Yfield:  dfield (M)   :  : field containing point y location",
"Proc Getdata:",
"Append:  {y,n}    : n  : if y, new data will be put below existing data",
"Clone:  token    :  : to clone an earlier proc's set of parameters",
"Data:  text    :  : following lines contain data",
"Datafile: token (M)     :   : file name, '-' (terminal), or a Unix command ",
"Join:  {y,n}    : n  : if y, new data will be put beside existing data",
"Percents: dfield (list20)   :  : change these fields from N to percentages, based on total",
"Saveas:  token    :  : to save a set of parms for cloning",
"Selectfields: token (list20)   : all  : select only these fields from input",
"Startline: number    : 1  : line to start with (first line is line 1)",
"Stopline: number     : 9999  : stop reading after this line is read",
"Proc Legend:",
"Backshade: color     :   : shade for backing box",
"Clone:  token    :  : to clone an earlier proc's set of parameters",
"Corner:  {A,B,C,D}   : A  : which corner of the area, clockwise from upperleft",
"Entry.font: font    :   : font for legend entries",
"Entry.size: charsize   : 7  : char size for legend entries",
"Entry:  text (M)   :   : text for legend entries, one per line ",
"Linethick: number (list10)  : 1 1 1 1 1 1 1 1 1 1   : thickness of line(s)",
"Linetype.magnify: number (list10)  : 3 3 3 3 3 3 3 3 3 3   : mag. factor for dash pattern",
"Linetype: number (list10)   :   : line dash type for (each) line",
"Location.system: {absolute,data}  : absolute : coord system for the above",
"Location: coordpair   :  : location for upperleft of legend",
"Mark.font: font    :   : ",
"Mark.size: charsize   : 7  :",
"Mark:  list    :  : list of marks for legend entries (symNS or chars)",
"Outlinebars: {y,n}    : n  : ' '",
"Saveas:  token    :  : to save a set of parms for cloning",
"Shade:  color (list10)   :  : for bar graphs",
"Title.size: charsize   : 10  : size for legend title",
"Title:  text    :  : legend title",
"Proc Lineplot:",
"Accum:  {y,n}    : n  : option to accumulate yalues of y",
"Clone:  token    :  : to clone an earlier proc's set of parameters",
"Label.size: charsize   : 8  : char size for line identifier",
"Label:   text    :   : curve identifier, one per line",
"Linethick: 0 to 10 (list8)  : 1 1 1 1 1 1 1 1  : thickness of line(s)",
"Linetype.magnify: 0 to 10 (list8) : 3 3 3 3 3 3 3 3  : mag. factor for dash pattern",
"Linetype: 0 to 8 (list8)  : 0 1 2 3 4 5 6 7 : line dash type for (each) line",
"Mark.size: charsize   : 7  : Size for mark chars",
"Mark:  list    :   : Mark char for points, one per line",
"Numberfinal: {y,n}    : n  : display y value of rightmost point",
"Numbers.offset: -1 to 1    : 0.015  : abs distance of numbers (+) above or (-)below line",
"Numbers: {y,n}    : n  : display y value at each point",
"Saveas:  token    :  : to save a set of parms for cloning",
"Shade:  color (list8)   :               : shading below lines",
"Stairstep.bars: {y,n}    : n  : for superimposing line over bar graph (moves it 1/2)",
"Stairstep: {y,n}    : n  : lines form steps rather than diagonals",
"Xfield:  dfield    :   : line's x data field (optional)",
"Xstart.0or1: {0,1}    : 0  : if no x data field specified, start on or beside origin",
"Yfield:  dfield (list8) (M)  :   : list of y fields for each line ",
"Zeroat:  number    : 0  : point for zero crossing with shading ",
"Proc Map:",
"Clone:  token    :  : to clone an earlier proc's set of parameters",
"Country.linethick: 0.1 to 5   : 1  : thickness for country boundary lines",
"Country: {usa,usa+canada}  : usa+canada : map format",
"List:  {y,n}    : y  : list state distribution down right side",
"Mode:  {country,state,statedist} : state  : country outln, state outln, or state distribution",
"Saveas:  token    :  : to save a set of parms for cloning",
"Shade:  color (list10)   : 1 .9 .8 .6 .4 .2 : shades corresponding to the above thresholds",
"State.linethick: 0.1 to 5   : 0.2  : thickness for state boundary lines",
"Statefield: dfield    :  : field in which standard state/province name can be found",
"Threshold: number (list10)   :  : thresholds for shading (don't include 0 or max)",
"Valfield: dfield    :  : field in which n value can be found",
"Proc Nicetab:",
"Area.rectangle: 2coordpair   :  : two coord pairs (low left, up right) defining area",
"Area:  token    :nicetab : a pre-defined area name, see area.coords",
"Body.font: font    :  : body font",
"Body.only: {y,n}    : n  : indicates no title present, process all as table body.",
"Body.size: token    : 8  : body char size",
"Clone:  token    :  : to clone an earlier proc's set of parameters",
"File:  token (M)   :   : file containing ascii table",
"Saveas:  token    :  : to save a set of parms for cloning",
"Title.font: font    :   : title font",
"Title.size: charsize   : 11  : title char size",
"Proc Page:",
"Clone:  token    :  : to clone an earlier proc's set of parameters",
"Paperway: {portrait,landscape,screen} : portrait : the way paper will be held to look at",
"Saveas:  token    :  : to save a set of parms for cloning",
"Standard.font:  font    : /Helvetica : default font for everything on page",
"Standard.linethick: 0 to 6   : 1  : standard line thickness",
"Title.belowtop: -12 to 12 (T)   : 0.2  : distance of 1st title line below top of page",
"Title.file: token    :  : file containing title",
"Title.font: font    :   : font for page title",
"Title.size: charsize   : 12  : char size of title",
"Title:  text    :   : window title",
"Proc Pagebreak:",
"Clone: token : : this is not really useful, but all procs must have this",
"Saveas: token : : this is not really useful, but all procs must have this",
"Proc Pie:",
"Field: dfield (M) : : Data field to use.  Numbers should be integer percentages.",
"Center: coordpair : 4.0 5.5 : Location of center, in absolute units." ,
"Radius: 0 to 5 :  3 : Radius of pie, in absolute units.",
"Shade: color list20 : : Shades of pie sections",
"Linethick: 0 to 10 : 1 : Thickness of lines",
"Explode: 0 to 3 : 0.1 : Distance in abs units to 'explode' each piece",
"Rotate: 0 to 360 : 0 : Rotate entire pie this many degrees counterclockwise",
"Clone: token : :",
"Saveas: token : :",
"Proc Point:",
"Clone:  token  :  : ",
"Mark:  token  : sym6e  : symbol code (see example point1.g)",
"Position: text (M) (C)  :  : position in absolute data system",
"Saveas:  token  :  : ",
"Size:  1 to 20  : 5  : marker size",
"Proc Polygon:",
"Clone:  token    :  : to clone an earlier proc's set of parameters",
"Linethick: 0.1 to 10   : 1  : thickness of line for outline",
"Linetype.magnify: 0.1 to 10   : 1  : magnification of patterns for outline",
"Linetype: 0 to 8    : 0  : line dash pattern for outline",
"Outline: {y,n}    : n  : outline polygon with a line?",
"Points:  text (M) (C)   :  : one coord pair per line (points making up a polygon)",
"Rectangle: 2coordpair   :  : (lower left and upper right) for a rectangle, abs units ",
"Saveas:  token    :  : to save a set of parms for cloning",
"Shade:  color    : 0.5  : shade of polygon",
"System:  {data,absolute}   : absolute : which coord system points are in",
"Proc QuitAppend:",
"Clone:  token  :  : ",
"Saveas:  token  :  : ",
"Proc Rangebar:",
"Clone:  token    :  : to clone an earlier proc's set of parameters",
"Ends:  {y,n}    : y  : do little cross-bars on the ends?",
"Field:  dfield (list5) (M)  :   : data fields (should have Nval members)",
"Idfield: dfield    :   : data field holding id label",
"Label.position: number    : 1  : position for N=.. label in Y data units",
"Label.size: charsize   : 6  : size of the above label in points",
"Linethick: 0 to 5    : 1  : thickness of boxplot line",
"Midlineright:  {y,n}    : n  : option for making median lines protrude right only",
"Midlinewidth: number    : 0  : size of median line in user units, 0 uses Width value",
"Nval:  1 to 5    : 5  : number of values making up the box",
"Saveas:  token    :  : to save a set of parms for cloning",
"Shade:  color    : 1.0  : shade for inside of bar",
"Width:  number    : 0.3  : width of box, in data units",
"Xfield:  dfield    :   : (optional) data field, bar x placement",
"Proc Text:",
"Clone:  token    :  : to clone an earlier proc's set of parameters",
"Direction: 0 to 359   : 0   : direction of text in degrees counterclockwise",
"File:  token    :  : file containing text",
"Embeddedcoords: {y,n} :  n : if y look for x and y values at beginning of each line",
"Font:  font    :   : font to use",
"Position: coordpair (M)   :   : location of beginning of 1st text line",
"Saveas:  token    :  : to save a set of parms for cloning",
"Size:  charsize   : 10  : size of text",
"System:  {data,absolute}   : absolute : which coord system position is in",
"Text:  text    :  : the text itself",
"Proc Vbargraph:",
"Clone:  token    :  : to clone an earlier proc's set of parameters",
"Field:  dfield (list8)   :   : a field for each bar and subbar",
"Format:  {single,cluster,stack}  : single : single bars, clusters of bars, or bars stacked up",
"Idfield.position: -1 to 1   : 0.02  : distance of label above (or below) top of bar (inches)",
"Idfield.size:  charsize   : 6  : char size of labels",
"Idfield: dfield (list8)   :   : bars can be labeled using these field(s)",
"Killwild: number    :   : if a data value greater than this is found, abort ",
"Outlinebars: {y,n}    : y  : outline for each bar",
"Saveas:  token    :  : to save a set of parms for cloning",
"Segment: {y,n}    : n  : segment bars at axis tics",
"Separation.sub: 0 to 1    : 0.03  : distance between sub-bars in cluster",
"Separation: 0 to 1    : 0.20  : distance between major bar spaces",
"Shade:   color (list8)   : .2 .5 .8 1 0  : a shade for each bar and subbar",
"Yfield:  dfield    :  : Y position of bars (optional)",
"Ystart.0or1: {0,1}    : 1  : start bars at Y=0 or Y=1",
"Zeroat:  number    :   : bars point down at values less than this (usually 0)",
"Proc Vector:",
"Point1fields: dfield (list2) (M) : :fields in data holding x and y describing point p1 (x,y)",
"Point2fields: dfield (list2) (M) : :fields in data holding x and y describing point p2 (x,y)",
"Headlength: 0 to 2 : 0.2 :determines size of arrowhead, length in inches from point",
"Headwidth:  0 to 0.8 : 0.24 :determines size of arrowhead, arc of half of arrow in radians",
"Headshade: color : 0.0 :color of arrowhead",
"Saveas: token	: : to save a set of parms for cloning",
"Clone:	token	: : to clone an earlier proc's set of parameters",
"Proc Vrangebar:",
"Clone:	token :	: to clone an earlier proc's set of parameters",
"Ends:	{y,n} : y : do little cross-bars on the ends?",
"Field:	dfield (list5) (M) : : data fields (should have Nval members)",
"Idfield: dfield	: : data field holding id label",
"Label.size: charsize : 6 : size of the above label in points",
"Label.position: number	: 1 : position for N=.. label in Y data units",
"Linethick: 0 to 5 : 1 : thickness of boxplot line",
"Midlinewidth: number : 0 : size of median line in user units, 0 uses Width value",
"Midlineright: {y,n} : n	: option for making median lines protrude right only",
"Nval: 1 to 5	: 5 : number of values making up the box",
"Saveas:	token	: : to save a set of parms for cloning",
"Shade: color	: 1.0 : shade for inside of bar",
"Width: number	: 0.3 : width of box, in data units",
"Yfield:	dfield	: : (optional) data field, bar x placement",
"", "", "" } ;

/* number of lines per proc */
int Tdx[30] = { 0, 
		64,  /* Areadef */
		4,   /* Arrow */
		17,  /* Barg */
		11,  /* Boxp */
		17,  /* Dist */
		8,   /* Draw */ 
		10,  /* Errorbars */
		11,  /* Getdata */
		20,  /* Legend */ 
		21,  /* Linep */
		12,  /*  Map */
		11,  /* Nicetab */
		11,  /* Page */
		3,   /* Pagebreak */
		10,   /* Pie */
		6,   /* Point */
		11,  /* Polygon */
		3,   /* QuitAppend */
		15,  /* Rangebar */
		11,  /* Text */
		17,  /* Vbar */
		8,   /* Vector */
		15,  /* Vrangebar */
		0, 0, 0, 0 };  

/* Note, only one space allowed after word "Proc" */
